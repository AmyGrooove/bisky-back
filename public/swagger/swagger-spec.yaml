openapi: 3.0.0
paths:
  /api/getOneRandomFact:
    get:
      operationId: FactController_getOneRandomFact
      summary: Get a random fact
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactModel'
      tags:
        - Fact
  /api/user/whoami:
    get:
      operationId: UserController_whoami
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - User
      security:
        - bearer: []
  /api/user/profile/{username}:
    get:
      operationId: UserController_getUser
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - User
  /api/auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserDto'
      responses:
        '201':
          description: ''
      tags:
        - Auth
  /api/auth/register:
    post:
      operationId: AuthController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags:
        - Auth
  /api/auth/logout:
    get:
      operationId: AuthController_logout
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Auth
      security:
        - bearer: []
  /api/auth/refresh:
    get:
      operationId: AuthController_refreshTokens
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Auth
info:
  title: Bisky API
  description: ''
  version: '2.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    FactModel:
      type: object
      properties:
        en:
          type: string
        ru:
          type: string
      required:
        - en
        - ru
    LoginUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    CreateUserDto:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - password
